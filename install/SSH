#!/bin/bash
# ----------------------------------
# shellcheck source=inc/includes_before
source "$(dirname "$0")"/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
######################################################################
# https://askubuntu.com/questions/144235/locale-variables-have-no-effect-in-remote-shell-perl-warning-setting-locale-f)
##################### FIRST LINE #####################################

#### Install packages
PackagesToInstall=(ssh openssh-server sshpass)
gfnPackagesManage 'install' "${PackagesToInstall[@]}"

#### /etc/ssh/sshd_config
cp -a /etc/ssh/sshd_config /etc/ssh/sshd_config.original
# Port
nNumLine=$(grep 'Port ' -n -m 1 /etc/ssh/sshd_config | cut -d ':' -f 1)
sed -i '/Port /d' /etc/ssh/sshd_config
sed -i "${nNumLine}i\Port ${gsPort_SSH}" /etc/ssh/sshd_config
# AddressFamily
nNumLine=$(grep 'AddressFamily ' -n -m 1 /etc/ssh/sshd_config | cut -d ':' -f 1)
sed -i '/AddressFamily /d' /etc/ssh/sshd_config
sed -i "${nNumLine}i\AddressFamily inet" /etc/ssh/sshd_config
# ListenAddress
nNumLine="$(grep 'ListenAddress ' -n -m 1 /etc/ssh/sshd_config | cut -d ':' -f 1)"
sed -i '/ListenAddress /d' /etc/ssh/sshd_config
sed -i "${nNumLine}i\ListenAddress 0.0.0.0" /etc/ssh/sshd_config
# # Protocol
# nNumLine="$(grep '^Protocol ' -n -m 1 /etc/ssh/sshd_config | cut -d ':' -f 1)"
# sed -i '/Protocol /d' /etc/ssh/sshd_config
# sed -i "${nNumLine}i\Protocol 2" /etc/ssh/sshd_config
# HostKeys for protocol version 2
sed -i "s/^#HostKey/HostKey/g;" /etc/ssh/sshd_config
# SyslogFacility
sed -i "s/^#SyslogFacility/SyslogFacility/g;" /etc/ssh/sshd_config
# LogLevel
sed -i "s/^#LogLevel/LogLevel/g;" /etc/ssh/sshd_config
# LoginGraceTime
sed -i "s/^#LoginGraceTime/LoginGraceTime/g;" /etc/ssh/sshd_config
# StrictModes
sed -i "s/^#StrictModes/StrictModes/g;" /etc/ssh/sshd_config
# PubkeyAuthentication
sed -i "s/^#PubkeyAuthentication/PubkeyAuthentication/g;" /etc/ssh/sshd_config
# AuthorizedKeysFile
sed -i "s/^#AuthorizedKeysFile/AuthorizedKeysFile/g;" /etc/ssh/sshd_config
# PermitEmptyPasswords
sed -i "s/^#PermitEmptyPasswords/PermitEmptyPasswords/g;" /etc/ssh/sshd_config
# PrintLastLog
sed -i "s/^#PrintLastLog/PrintLastLog/g;" /etc/ssh/sshd_config
# ClientAliveInterval
sed -i "s/^#ClientAliveInterval 0/ClientAliveInterval 60/g;" /etc/ssh/sshd_config
# UseDNS
nNumLine="$(grep 'UseDNS ' -n -m 1 /etc/ssh/sshd_config | cut -d ':' -f 1)"
sed -i '/UseDNS /d' /etc/ssh/sshd_config
sed -i "${nNumLine}i\UseDNS no" /etc/ssh/sshd_config
# TCPKeepAlive
nNumLine="$(grep 'TCPKeepAlive ' -n -m 1 /etc/ssh/sshd_config | cut -d ':' -f 1)"
sed -i '/TCPKeepAlive /d' /etc/ssh/sshd_config
sed -i "${nNumLine}i\TCPKeepAlive no" /etc/ssh/sshd_config
# X11Forwarding
sed -i "s/^#X11Forwarding yes/X11Forwarding no/g;s/^X11Forwarding yes/X11Forwarding no/g;" /etc/ssh/sshd_config
# UsePrivilegeSeparation
if (! grep -q 'UsePrivilegeSeparation' /etc/ssh/sshd_config); then
    nNumLine=$((nNumLine + 1))
    sed -i "${nNumLine}i\UsePrivilegeSeparation yes" /etc/ssh/sshd_config
else
    nNumLine=$(grep 'UsePrivilegeSeparation ' -n -m 1 /etc/ssh/sshd_config | cut -d ':' -f 1)
    sed -i '/UsePrivilegeSeparation /d' /etc/ssh/sshd_config
    sed -i "${nNumLine}i\UsePrivilegeSeparation yes" /etc/ssh/sshd_config
fi
# PrintMotd
# nNumLine=$(grep 'PrintMotd ' -n -m 1 /etc/ssh/sshd_config | cut -d ':' -f 1)
# sed -i '/PrintMotd /d' /etc/ssh/sshd_config
# sed -i "${nNumLine}i\PrintMotd yes" /etc/ssh/sshd_config
# AcceptEnv
sed -i "s/^AcceptEnv/#AcceptEnv/g;" /etc/ssh/sshd_config
# SendEnv
nNumLine=$(grep 'SendEnv ' -n -m 1 /etc/ssh/ssh_config | cut -d ':' -f 1)
sed -i '/SendEnv /d' /etc/ssh/ssh_config
sed -i "${nNumLine}i\#   SendEnv LANG LC_*" /etc/ssh/ssh_config
# Subsystem
nNumLine="$(grep 'Subsystem' -n -m 1 /etc/ssh/sshd_config | cut -d ':' -f 1)"
sed -i '/Subsystem/d' /etc/ssh/sshd_config
sed -i "${nNumLine}i\Subsystem sftp internal-sftp -l ERROR -f AUTH" /etc/ssh/sshd_config
# MySB
if (! grep -q '#### MySB - MARKER (DO NOT ADD PARAMS AFTER THIS BLOCK) ####' /etc/ssh/sshd_config); then
    {
        echo
        echo "#### MySB - MARKER (DO NOT ADD PARAMS AFTER THIS BLOCK) ####"
        echo "AllowGroups sshdusers mysb_users"
        echo "Match Group mysb_users,!sshdusers"
        echo "	ForceCommand internal-sftp"
        echo "	AllowTcpForwarding no"
        echo "	X11Forwarding no"
        echo "	ChrootDirectory /home/%u"
        echo "Match Group sshdusers"
        echo "	AllowTcpForwarding yes"
        echo "	X11Forwarding no"
        echo "#### MySB - MARKER (DO NOT ADD PARAMS AFTER THIS BLOCK) ####"
        echo
    } >>/etc/ssh/sshd_config
fi

# Groups
(! grep -q 'sudo' /etc/group) && groupadd -f sudo
(! grep -q 'sshdusers' /etc/group) && groupadd -f sshdusers
(! grep -q 'mysb_users' /etc/group) && groupadd -f mysb_users

# Users
gfnListCountUsers 'normal'
sUserToPreserve="${gsUsersList} root plex"
while read -r sUser; do
    case "${gsSwitch}" in
        'INSTALL') (! grep -q "${sUser}" <<<"${sUserToPreserve}") && userdel --remove --force "${sUser}" ;;
    esac
    (! grep -q "${sUser}" <<<"${sUserToPreserve}") && userdel --remove --force "${sUser}"
    (grep -q "${sUser}" <<<"${gsUsersList}") && {
        usermod -a -G mysb_users "${sUser}"
        if [ "${sUser}" == "${gsMainUserName}" ]; then
            usermod -a -G sshdusers "${sUser}"
        else
            deluser "${sUser}" sshdusers
        fi
    }
    [ "${sUser}" == "root" ] && usermod -a -G sshdusers "${sUser}"
done < <(grep bash /etc/passwd | cut -f1 -d:)

mkdir -pv /usr/share/terminfo/l/
cp /lib/terminfo/l/linux /usr/share/terminfo/l/

mkdir -pv /home/MySB_share
chown -v root:mysb_users /home/MySB_share
chmod -v 770 /home/MySB_share

#### Display final sshd_config
cat /etc/ssh/sshd_config

#### START services
gfnManageServices start "ssh"

# -----------------------------------------
# shellcheck source=inc/includes_after
source "$(dirname "$0")"/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################
