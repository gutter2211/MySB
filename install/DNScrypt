#!/bin/bash
# ----------------------------------
# shellcheck source=inc/includes_before
source "$(dirname "$0")"/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################
# https://dnscrypt.info/faq/
# https://dnscrypt.info/public-servers
# https://en.wikipedia.org/wiki/Comparison_of_DNS_server_software
######################################################################

if [ "${USAGE}" == "ON" ]; then
    if [ "${gbIsInstalled_DNScrypt}" == "NO" ]; then
        echo
        echo -e "${CYELLOW}DNScrypt-proxy is not installed!${CEND}"
        gfnQuestionGetString NO "Install DNScrypt-proxy? " gbToInstall_DNScrypt "${Global_YES}"
        gbToInstall_DNScrypt="$(echo "${gbToInstall_DNScrypt}" | tr '[:lower:]' '[:upper:]')"

        cmdMySQL 'MySB_db' "UPDATE services SET is_installed = '$(echo "${gbToInstall_DNScrypt}" | sed "s/${Global_NO}/0/g;s/${Global_YES}/1/g;")' WHERE serv_name='DNScrypt-proxy';"

        if [ "${gbToInstall_DNScrypt}" != "YES" ]; then
            gfnEndingScript 0
        fi
    fi
fi

function fnDownloadDnscrypt() {
    #### Download archive
    # Loading repository informations
    gfnGetRepoValues 'DNScrypt-proxy'

    # Change architecture if needed
    case $(getconf LONG_BIT) in
        32) gsRepoURL="${gsRepoURL//x86_64/i386}" ;;
    esac

    if [ "${gsVersionLatest}" != "${gsVersionInstalled}" ]; then
        # Download TARGZ file
        [ -f "${MySB_Files}/${gsRepoFile}" ] && mv -v "${MySB_Files}/${gsRepoFile}" "${MySB_Files}/${gsRepoFile}.tmp"
        # Remove temp folder
        gfnDeleteDirectory 1 "${gsRepoDir}"
        gfnRepoManageByType
        [ -f "${MySB_Files}/${gsRepoFile}" ] && rm -fv "${MySB_Files}/${gsRepoFile}.tmp"

        # Stop service
        gfnManageServices stop "dnscrypt-proxy"

        # Copy binary
        if [ -f "${gsRepoDir}/dnscrypt-proxy" ]; then
            cp -v "${gsRepoDir}/dnscrypt-proxy" /usr/local/bin/dnscrypt-proxy
            chmod -v +x /usr/local/bin/dnscrypt-proxy
            /usr/local/bin/dnscrypt-proxy --version
        fi

        # Start service
        gfnManageServices start "dnscrypt-proxy"
    fi
}

#### CRON UPGRADE
if [ "${gsSwitch}" == "CRON" ] && [ "${gbIsInstalled_DNScrypt}" == "YES" ]; then
    # Check for a new version / Install it
    fnDownloadDnscrypt
fi

#### INSTALL
if [ "${gbToInstall_DNScrypt}" == "YES" ]; then
    # Create user
    (! grep -q '_dnscrypt-proxy' /etc/passwd) && useradd -d /run/dnscrypt-proxy -s /usr/sbin/nologin --system _dnscrypt-proxy

    # Create directories
    install -d -v -o _dnscrypt-proxy -g _dnscrypt-proxy -m 0755 /etc/dnscrypt-proxy
    install -d -v -o _dnscrypt-proxy -g _dnscrypt-proxy -m 0755 /var/log/dnscrypt-proxy
    install -d -v -o _dnscrypt-proxy -g _dnscrypt-proxy -m 0755 /run/dnscrypt-proxy

    # Switch to bind
    gfnSwitchDNS "bind"

    # Updating clock
    /usr/sbin/ntpdate -u 0.fr.pool.ntp.org

    #### Download archive
    fnDownloadDnscrypt

    # Config files
    install -v -o root -g root -m 0644 "${MySB_InstallDir}"/templates/dnscrypt/dnscrypt-proxy.toml.tmpl /etc/dnscrypt-proxy/dnscrypt-proxy.toml
    install -v -o root -g root -m 0644 "${MySB_InstallDir}"/templates/dnscrypt/whitelist.txt.tmpl /etc/dnscrypt-proxy/whitelist.txt
    install -v -o root -g root -m 0644 "${MySB_InstallDir}"/templates/dnscrypt/blacklist.txt.tmpl /etc/dnscrypt-proxy/blacklist.txt
    install -v -o root -g root -m 0644 "${MySB_InstallDir}"/templates/dnscrypt/ip-blacklist.txt.tmpl /etc/dnscrypt-proxy/ip-blacklist.txt
    install -v -o root -g root -m 0644 "${MySB_InstallDir}"/templates/dnscrypt/cloaking-rules.txt.tmpl /etc/dnscrypt-proxy/cloaking-rules.txt
    install -v -o root -g root -m 0644 "${MySB_InstallDir}"/templates/dnscrypt/forwarding-rules.txt.tmpl /etc/dnscrypt-proxy/forwarding-rules.txt

    # Systemd
    install -v -o root -g root -m 0644 "${MySB_InstallDir}"/templates/dnscrypt/dnscrypt-proxy.service.tmpl /lib/systemd/system/dnscrypt-proxy.service
    perl -pi -e "s/<InstallDir>/${gsInstallDirEscaped}/g" /lib/systemd/system/dnscrypt-proxy.service
    systemctl daemon-reload
    systemctl disable dnscrypt-proxy.service

    # Resore DB config
    gfnDnscryptProxyConfig

    # Mark as installed
    if gfnCheckCommand 0 /usr/local/bin/dnscrypt-proxy; then
        cmdMySQL 'MySB_db' "UPDATE services SET to_install='0',is_installed='1' WHERE serv_name='DNScrypt-proxy';" -v
    fi
fi

case "${gsSwitch}" in
    INSTALL | UPGRADE)
        gfnManageServices stop "dnscrypt-proxy"
        rm -fv /var/log/dnscrypt-proxy/dnscrypt-proxy.log
        gfnManageServices start "dnscrypt-proxy"
        sleep 10
        [ -f /var/log/dnscrypt-proxy/dnscrypt-proxy.log ] && cat /var/log/dnscrypt-proxy/dnscrypt-proxy.log
        ;;
esac

#### Check internet
ping -c3 github.com

# -----------------------------------------
# shellcheck source=inc/includes_after
source "$(dirname "$0")"/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################
