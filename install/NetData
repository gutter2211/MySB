#!/bin/bash
# ----------------------------------
# shellcheck source=inc/includes_before
source "$(dirname "$0")"/../inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_
#	_\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_
#	 _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__
#	  _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_
#	   _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_
#		_\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_
#		 _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__
#		  _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
######################################################################
# https://docs.netdata.cloud/daemon/config/#configuration-guide
#
# Dashboard:
#   - https://docs.netdata.cloud/web/gui/custom/
#   - https://docs.netdata.cloud/web/gui/custom/#custom-dashboards
#   - https://github.com/netdata/netdata/blob/master/web/gui/tv.html
#   - https://my-netdata.io/dashboard.html
#   - https://github.com/netdata/netdata/blob/master/web/gui/demo.html
##################### FIRST LINE #####################################

#### Install package
sPackages=(zlib1g-dev uuid-dev libuv1-dev liblz4-dev libjudy-dev libssl-dev libmnl-dev iproute2 python python-dnspython python-ipaddress python-mysqldb lm-sensors netcat nodejs)
gfnPackageBundleInstall "${sPackages[@]}"

#### KSM
if [ -f "/sys/kernel/mm/ksm/run" ]; then
    if [ "$(cat "/sys/kernel/mm/ksm/run")" != "1" ]; then
        echo 1 >/sys/kernel/mm/ksm/run
        echo 1000 >/sys/kernel/mm/ksm/sleep_millisecs
    fi
fi

#### Install
gfnGetRepoValues 'NetData'
gfnRepoManageByType
if [[ ${gnRepoUpgrade} -eq 1 ]] || [ "${gsSwitch}" == "INSTALL" ]; then
    cd "${gsRepoDir}"/ || exit 1
    ./netdata-installer.sh --stable-channel --dont-wait --enable-lto
    # Disable the upgrade job
    cmdMySQL 'MySB_db' "UPDATE repositories SET upgrade='0' WHERE name='NetData';" -v
    cd .. && gfnDeleteDirectory 1 "${gsRepoDir:-/tmp/null}"/
fi

#### STOP services
gfnManageServices stop "netdata"

#### Notifications config
install -v -o root -g root -m 0644 "${MySB_InstallDir}"/templates/netdata/health_alarm_notify.conf.tmpl /etc/netdata/health_alarm_notify.conf
perl -pi -e "s/<main_user_mail>/${gsMainUserEmail}/g" /etc/netdata/health_alarm_notify.conf

#### Others
install -v -o root -g netdata -m 0640 "${MySB_InstallDir}"/templates/netdata/usr.lib.netdata.conf.d.python.d.mysql.conf.tmpl /usr/lib/netdata/conf.d/python.d/mysql.conf
install -v -o root -g netdata -m 0640 "${MySB_InstallDir}"/templates/netdata/usr.lib.netdata.conf.d.python.d.proxysql.conf.tmpl /usr/lib/netdata/conf.d/python.d/proxysql.conf
install -v -o root -g netdata -m 0640 "${MySB_InstallDir}"/templates/netdata/usr.lib.netdata.conf.d.health.d.net.conf.tmpl /usr/lib/netdata/conf.d/health.d/net.conf

# #### /etc/netdata/netdata.conf
install -v -o root -g root -m 0644 "${MySB_InstallDir}"/templates/netdata/netdata.conf.tmpl /etc/netdata/netdata.conf
# ## [global]
perl -pi -e "s/<gsTimeZone>/${gsTimeZoneEscaped}/g" /etc/netdata/netdata.conf

# # bind to
# nNumLine=$(grep 'bind to =' -n -m 1 /etc/netdata/netdata.conf | cut -d ':' -f 1)
# sed -i "${nNumLine}d" /etc/netdata/netdata.conf
# sed -i "${nNumLine}i\        bind to = unix:/tmp/netdata.sock" /etc/netdata/netdata.conf
# # access log
# nNumLine=$(grep 'access log =' -n -m 1 /etc/netdata/netdata.conf | cut -d ':' -f 1)
# sed -i "${nNumLine}d" /etc/netdata/netdata.conf
# sed -i "${nNumLine}i\        access log = none" /etc/netdata/netdata.conf
# # process scheduling policy
# nNumLine=$(grep 'process scheduling policy =' -n -m 1 /etc/netdata/netdata.conf | cut -d ':' -f 1)
# sed -i "${nNumLine}d" /etc/netdata/netdata.conf
# sed -i "${nNumLine}i\        process scheduling policy = other" /etc/netdata/netdata.conf
# # process nice level
# nNumLine=$(grep 'process nice level =' -n -m 1 /etc/netdata/netdata.conf | cut -d ':' -f 1)
# sed -i "${nNumLine}d" /etc/netdata/netdata.conf
# sed -i "${nNumLine}i\        process nice level = 0" /etc/netdata/netdata.conf
# # memory deduplication
# nNumLine=$(grep 'memory deduplication (ksm) =' -n -m 1 /etc/netdata/netdata.conf | cut -d ':' -f 1)
# sed -i "${nNumLine}d" /etc/netdata/netdata.conf
# sed -i "${nNumLine}i\        memory deduplication (ksm) = yes" /etc/netdata/netdata.conf
# # memory mode
# nNumLine=$(grep 'memory mode =' -n -m 1 /etc/netdata/netdata.conf | cut -d ':' -f 1)
# sed -i "${nNumLine}d" /etc/netdata/netdata.conf
# sed -i "${nNumLine}i\        memory mode = dbengine" /etc/netdata/netdata.conf
# ((nNumLine++))
# sed -i "${nNumLine}i\        page cache size = 32" /etc/netdata/netdata.conf
# ((nNumLine++))
# sed -i "${nNumLine}i\        dbengine disk space = 256" /etc/netdata/netdata.conf
# ## [web]
# # enable gzip compression
# nNumLine=$(grep 'enable gzip compression =' -n -m 1 /etc/netdata/netdata.conf | cut -d ':' -f 1)
# sed -i "${nNumLine}d" /etc/netdata/netdata.conf
# sed -i "${nNumLine}i\        enable gzip compression = yes" /etc/netdata/netdata.conf
# # gzip compression level
# nNumLine=$(grep 'gzip compression level =' -n -m 1 /etc/netdata/netdata.conf | cut -d ':' -f 1)
# sed -i "${nNumLine}d" /etc/netdata/netdata.conf
# sed -i "${nNumLine}i\        gzip compression level = 1" /etc/netdata/netdata.conf

#### NginX
install -v -o root -g root -m 0600 "${MySB_InstallDir}"/templates/nginx/etc.nginx.locations.netdata.conf.tmpl /etc/nginx/locations/NetData.conf
perl -pi -e "s/<MainUser>/${gsMainUserName}/g" /etc/nginx/locations/NetData.conf
install -v -o root -g root -m 0600 "${MySB_InstallDir}"/templates/nginx/etc.nginx.proxy.netdata.conf.tmpl /etc/nginx/proxy/NetData.conf
install -v -o root -g root -m 0600 "${MySB_InstallDir}"/templates/nginx/etc.nginx.upstream.netdata.conf.tmpl /etc/nginx/upstream/NetData.conf

#### MySQL
source /etc/MySB/config_db
mysql -u root -p"${MySQL_RootPassword}" --verbose <<-EOF
    CREATE USER IF NOT EXISTS 'netdata'@'localhost';
    GRANT USAGE ON *.* to 'netdata'@'localhost' WITH GRANT OPTION;
    FLUSH PRIVILEGES;
EOF

#### START services
gfnManageServices start "nginx netdata"

# -----------------------------------------
# shellcheck source=inc/includes_after
source "$(dirname "$0")"/../inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################
